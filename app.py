import streamlit as st
import numpy as np
import pandas as pd
from catboost import CatBoostClassifier

# --- –ó–∞–≥—Ä—É–∂–∞–µ–º –æ–±—É—á–µ–Ω–Ω—É—é –º–æ–¥–µ–ª—å ---
@st.cache_resource
def load_model():
    model = CatBoostClassifier()
    model.load_model("catboost_model.cbm")
    return model

model = load_model()

# --- –ó–∞–≥–æ–ª–æ–≤–æ–∫ ---
st.title("üöÄ –î–µ—Ç–µ–∫—Ç–æ—Ä –º–æ—à–µ–Ω–Ω–∏—á–µ—Å–∫–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π")
st.write("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏ –Ω–∞–∂–º–∏—Ç–µ **–ü—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å**, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ–Ω–∞ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å–∫–æ–π.")

# --- UI: –ü–æ–ª–∑—É–Ω–∫–∏ –¥–ª—è –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ ---
v10 = st.slider("V10", min_value=-20.0, max_value=20.0, value=0.0)
v12 = st.slider("V12", min_value=-20.0, max_value=20.0, value=0.0)
v14 = st.slider("V14", min_value=-20.0, max_value=20.0, value=0.0)
v17 = st.slider("V17", min_value=-20.0, max_value=20.0, value=0.0)
amount = st.number_input("–°—É–º–º–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ (Amount)", min_value=0.0, max_value=10000.0, value=100.0)

# --- –§–æ—Ä–º–∏—Ä—É–µ–º –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ ---
features = np.array([[v10, v12, v14, v17, amount]])


# --- –ö–Ω–æ–ø–∫–∞ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è ---
if st.button("üîç –ü—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å"):
    prediction = model.predict(features)
    proba = model.predict_proba(features)[0][1]  # –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–∞

    if prediction == 1:
        st.error(f"‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ! –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–∞: {proba:.2%}")
    else:
        st.success(f"‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–∞. –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–∞: {proba:.2%}")



